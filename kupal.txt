-- Load the external script
loadstring(game:HttpGet("https://raw.githubusercontent.com/scripade/Fly-gui/refs/heads/main/flyguiv2.txt"))()

-- TriggerBot Configuration
TriggerBot = {
    Enabled = true,            -- TriggerBot enabled by default
    Visualize = true,          -- Visualize the FOV by default
    Range = 28,              -- Range for the FOV circle (bigger range for better hits)
    UseDelay = false,          -- Disable delay for immediate firing
    Delay = 0.2,               -- Set delay to 0.02 or 0.2 if you want good delay.
}

-- Required Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer
local MainColor = Color3.fromRGB(173, 216, 230)

-- FOV Visualization (circle to show where the TriggerBot will trigger)
local TriggerBotFOV = Drawing.new("Circle")
TriggerBotFOV.Transparency = 1
TriggerBotFOV.Thickness = 1
TriggerBotFOV.Radius = TriggerBot.Range
TriggerBotFOV.Filled = false
TriggerBotFOV.Color = MainColor
TriggerBotFOV.Visible = TriggerBot.Visualize

-- Function to get all players within the FOV range
local function get_players_in_fov()
    local playersInFov = {}
    local mousePos = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)  -- Center of screen (crosshair)

    -- Iterate through all players to find the ones in FOV range
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Humanoid") then
            local hrp = player.Character:FindFirstChild("HumanoidRootPart")
            if hrp then
                local screenPos, onScreen = Camera:WorldToViewportPoint(hrp.Position)
                if onScreen then
                    -- Calculate the distance between the center of the screen and the player's position
                    local distance = (Vector2.new(screenPos.X, screenPos.Y) - mousePos).Magnitude
                    if distance <= TriggerBot.Range then
                        table.insert(playersInFov, player)
                    end
                end
            end
        end
    end
    return playersInFov
end

-- Function to immediately lock on and shoot at all valid players in FOV
local function lock_and_shoot()
    if TriggerBot.Enabled then
        -- Get all players within FOV range
        local playersInFov = get_players_in_fov()

        -- If there are players in the FOV
        for _, closestPlayer in ipairs(playersInFov) do
            if closestPlayer and closestPlayer.Character then
                local hrp = closestPlayer.Character:FindFirstChild("HumanoidRootPart")

                -- If we have a HumanoidRootPart and the player has a tool equipped
                if hrp and LocalPlayer.Character:FindFirstChildOfClass("Tool") then
                    local tool = LocalPlayer.Character:FindFirstChildOfClass("Tool")
                    local toolName = tool.Name
                    local validTool = toolName ~= "[Knife]" and toolName ~= "Wallet" and toolName ~= "Silent Aim Tool"

                    if validTool then
                        -- Directly aim at the target's HumanoidRootPart for perfect accuracy
                        local aimPos = hrp.Position
                        local screenPos, onScreen = Camera:WorldToViewportPoint(aimPos)

                        if onScreen then
                            -- Update the FOV position to the new target's position
                            TriggerBotFOV.Position = Vector2.new(screenPos.X, screenPos.Y)
                            TriggerBotFOV.Visible = TriggerBot.Visualize

                            -- Handle firing if within range and crosshair is on target
                            local mousePos = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
                            local distance = (mousePos - TriggerBotFOV.Position).Magnitude

                            -- Immediate firing without delay when within range
                            if distance <= TriggerBot.Range then
                                tool:Activate()  -- Immediate firing
                                TriggerBotFOV.Color = Color3.fromRGB(55, 0, 55) -- Red when firing
                            else
                                TriggerBotFOV.Color = MainColor -- Default color when not firing
                            end
                        else
                            TriggerBotFOV.Visible = false
                        end
                    else
                        TriggerBotFOV.Visible = false
                    end
                else
                    TriggerBotFOV.Visible = false
                end
            end
        end
    end
end

-- TriggerBot Logic (Main Logic for Activation)
local triggerbot_last_tick = 0

RunService.Heartbeat:Connect(function()
    local now = tick()
    if now - triggerbot_last_tick < 0 then return end -- Throttle to ~20FPS
    triggerbot_last_tick = now

    -- Call the lock and shoot function to check and shoot at valid targets
    lock_and_shoot()
end)

-- Menu Configuration
Menu.Container("Main", "Trigger Bot", "Right")
Menu.CheckBox("Main", "Trigger Bot", "Enabled", TriggerBot.Enabled, function(a)
    TriggerBot.Enabled = a
end)

Menu.TextBox("Main", "Trigger Bot", "Prediction", tostring(TriggerBot.Prediction), function(a)
    TriggerBot.Prediction = tonumber(a)
end)

Menu.CheckBox("Main", "Trigger Bot", "Visualize", TriggerBot.Visualize, function(a)
    TriggerBot.Visualize = a
end)

Menu.CheckBox("Main", "Trigger Bot", "Use Delay", TriggerBot.UseDelay, function(a)
    TriggerBot.UseDelay = a
end)

Menu.TextBox("Main", "Trigger Bot", "Delay", tostring(TriggerBot.Delay), function(a)
    TriggerBot.Delay = tonumber(a)
end)

Menu.Slider("Main", "Trigger Bot", "Range", 1, 100, TriggerBot.Range, "", 1, function(Value)
    TriggerBot.Range = Value
end)
